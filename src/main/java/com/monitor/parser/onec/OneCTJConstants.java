package com.monitor.parser.onec;

/* Generated By:JavaCC: Do not edit this line. OneCTJConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OneCTJConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DE_CONTEXT = 4;
  /** RegularExpression Id. */
  int DE_DB2 = 5;
  /** RegularExpression Id. */
  int DE_DBMSSQL = 6;
  /** RegularExpression Id. */
  int DE_DBORACLE = 7;
  /** RegularExpression Id. */
  int DE_DBPOSTGRS = 8;
  /** RegularExpression Id. */
  int DE_DBV8DB_ENG = 9;
  /** RegularExpression Id. */
  int DE_EXCP = 10;
  /** RegularExpression Id. */
  int DE_SCALL = 11;
  /** RegularExpression Id. */
  int DE_SDBL = 12;
  /** RegularExpression Id. */
  int DE_TDEADLOCK = 13;
  /** RegularExpression Id. */
  int DE_TLOCK = 14;
  /** RegularExpression Id. */
  int DE_ANY_OTHER = 15;
  /** RegularExpression Id. */
  int EDP_CONTEXT = 16;
  /** RegularExpression Id. */
  int EDP_ESCALATING = 17;
  /** RegularExpression Id. */
  int EDP_LKSRC = 18;
  /** RegularExpression Id. */
  int EDP_LOCKS = 19;
  /** RegularExpression Id. */
  int EDP_SQL = 20;
  /** RegularExpression Id. */
  int EDP_WAIT_CONNECTIONS = 21;
  /** RegularExpression Id. */
  int EDP_ANY_OTHER = 22;
  /** RegularExpression Id. */
  int LL_EQUALS_SINGLE_QUOTES = 23;
  /** RegularExpression Id. */
  int LL_EQUALS_DOUBLE_QUOTES = 24;
  /** RegularExpression Id. */
  int LL_EQUALS = 25;
  /** RegularExpression Id. */
  int LLP_EXCLUSIVE = 26;
  /** RegularExpression Id. */
  int LLP_SHARED = 27;
  /** RegularExpression Id. */
  int LLP_IDENTIFIER = 28;
  /** RegularExpression Id. */
  int LLP_DOT = 29;
  /** RegularExpression Id. */
  int LLP_EQUALS = 30;
  /** RegularExpression Id. */
  int LLP_COMMA = 31;
  /** RegularExpression Id. */
  int LLP_EOL = 32;
  /** RegularExpression Id. */
  int LLP_STRING = 33;
  /** RegularExpression Id. */
  int LLP_STRING_SEQUENCE = 34;
  /** RegularExpression Id. */
  int LLSQP_EXCLUSIVE = 35;
  /** RegularExpression Id. */
  int LLSQP_SHARED = 36;
  /** RegularExpression Id. */
  int LLSQP_IDENTIFIER = 37;
  /** RegularExpression Id. */
  int LLSQP_DOT = 38;
  /** RegularExpression Id. */
  int LLSQP_EQUALS = 39;
  /** RegularExpression Id. */
  int LLSQP_COMMA = 40;
  /** RegularExpression Id. */
  int LLSQP_SINGLE_QUOTE = 41;
  /** RegularExpression Id. */
  int LLSQP_STRING = 42;
  /** RegularExpression Id. */
  int LLSQP_STRING_SEQUENCE = 43;
  /** RegularExpression Id. */
  int LLDQP_EXCLUSIVE = 44;
  /** RegularExpression Id. */
  int LLDQP_SHARED = 45;
  /** RegularExpression Id. */
  int LLDQP_IDENTIFIER = 46;
  /** RegularExpression Id. */
  int LLDQP_DOT = 47;
  /** RegularExpression Id. */
  int LLDQP_EQUALS = 48;
  /** RegularExpression Id. */
  int LLDQP_COMMA = 49;
  /** RegularExpression Id. */
  int LLDQP_DOUBLE_QUOTE = 50;
  /** RegularExpression Id. */
  int LLDQP_STRING = 51;
  /** RegularExpression Id. */
  int LLDQP_STRING_SEQUENCE = 52;
  /** RegularExpression Id. */
  int DIGIT = 53;
  /** RegularExpression Id. */
  int LETTER = 54;
  /** RegularExpression Id. */
  int DL_EOL = 55;
  /** RegularExpression Id. */
  int DL_BOM = 56;
  /** RegularExpression Id. */
  int DL_TIMESTAMP = 57;
  /** RegularExpression Id. */
  int DL_INTEGER = 58;
  /** RegularExpression Id. */
  int DL_COMMA = 59;
  /** RegularExpression Id. */
  int EDL_EOL = 60;
  /** RegularExpression Id. */
  int EDL_INTEGER = 61;
  /** RegularExpression Id. */
  int EDL_EQUALS = 62;
  /** RegularExpression Id. */
  int EDL_COMMA = 63;
  /** RegularExpression Id. */
  int VL_EOL = 64;
  /** RegularExpression Id. */
  int VL_INTEGER = 65;
  /** RegularExpression Id. */
  int VL_STRING = 66;
  /** RegularExpression Id. */
  int VL_STRING_SEQUENCE = 67;
  /** RegularExpression Id. */
  int VL_COMMA = 68;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int EVENT_DATA = 1;
  /** Lexical state. */
  int VALUE = 2;
  /** Lexical state. */
  int LOCKS = 3;
  /** Lexical state. */
  int LOCKS_PROPERTIES = 4;
  /** Lexical state. */
  int LOCKS_SINGLE_QUOTED_PROPERTIES = 5;
  /** Lexical state. */
  int LOCKS_DOUBLE_QUOTED_PROPERTIES = 6;
  /** Lexical state. */
  int LOCKS_PROPERTIES_VALUES = 7;
  /** Lexical state. */
  int LOCKS_SINGLE_QUOTED_PROPERTIES_VALUES = 8;
  /** Lexical state. */
  int LOCKS_DOUBLE_QUOTED_PROPERTIES_VALUES = 9;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"Context\"",
    "\"DB2\"",
    "\"DBMSSQL\"",
    "\"DBORACLE\"",
    "\"DBPOSTGRS\"",
    "\"DBV8DBEng\"",
    "\"EXCP\"",
    "\"SCALL\"",
    "\"SDBL\"",
    "\"TDEADLOCK\"",
    "\"TLOCK\"",
    "<DE_ANY_OTHER>",
    "\"Context\"",
    "\"escalating\"",
    "\"lksrc\"",
    "\"Locks\"",
    "\"Sql\"",
    "\"WaitConnections\"",
    "<EDP_ANY_OTHER>",
    "\"=\\\'\"",
    "\"=\\\"\"",
    "\"=\"",
    "\"Exclusive\"",
    "\"Shared\"",
    "<LLP_IDENTIFIER>",
    "\".\"",
    "\"=\"",
    "\",\"",
    "<LLP_EOL>",
    "<LLP_STRING>",
    "<LLP_STRING_SEQUENCE>",
    "\"Exclusive\"",
    "\"Shared\"",
    "<LLSQP_IDENTIFIER>",
    "\".\"",
    "\"=\"",
    "\",\"",
    "\"\\\'\"",
    "<LLSQP_STRING>",
    "<LLSQP_STRING_SEQUENCE>",
    "\"Exclusive\"",
    "\"Shared\"",
    "<LLDQP_IDENTIFIER>",
    "\".\"",
    "\"=\"",
    "\",\"",
    "\"\\\"\"",
    "<LLDQP_STRING>",
    "<LLDQP_STRING_SEQUENCE>",
    "<DIGIT>",
    "<LETTER>",
    "\"\\n\"",
    "\"\\ufeff\"",
    "<DL_TIMESTAMP>",
    "<DL_INTEGER>",
    "\",\"",
    "\"\\n\"",
    "<EDL_INTEGER>",
    "\"=\"",
    "\",\"",
    "<VL_EOL>",
    "<VL_INTEGER>",
    "<VL_STRING>",
    "<VL_STRING_SEQUENCE>",
    "\",\"",
    "\"-\"",
  };

}
